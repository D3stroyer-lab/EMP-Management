{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass CreateEmployeeComponent {\n  constructor(employeeService, router) {\n    this.employeeService = employeeService;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  //It send the employee data to employee service method(which is createEmployee)\n  saveEmployee() {\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  //It will transfer to the /employees path\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  onSubmit() {\n    console.log(this.employee);\n    this.saveEmployee();\n  }\n}\nCreateEmployeeComponent.ɵfac = function CreateEmployeeComponent_Factory(t) {\n  return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCreateEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateEmployeeComponent,\n  selectors: [[\"app-create-employee\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[1, \"col-md-6\", \"offset-md-3\", \"mt-4\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function CreateEmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n      i0.ɵɵtext(2, \"Create Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateEmployeeComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.employee.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.employee.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \"Email Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.employee.emailId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 6);\n      i0.ɵɵtext(17, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CreateEmployeeComponent };","map":{"version":3,"names":["Employee","CreateEmployeeComponent","constructor","employeeService","router","employee","ngOnInit","Error","saveEmployee","createEmployee","subscribe","data","console","log","goToEmployeeList","error","navigate","onSubmit","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","Router","selectors","decls","vars","consts","template","CreateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateEmployeeComponent_Template_form_ngSubmit_3_listener","CreateEmployeeComponent_Template_input_ngModelChange_7_listener","$event","firstName","CreateEmployeeComponent_Template_input_ngModelChange_11_listener","lastName","CreateEmployeeComponent_Template_input_ngModelChange_15_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["Z:\\emp-crud\\emp-crud\\Emp-Mng-sys-using-STS-Angular\\Fronted\\Employee-Mangement\\src\\app\\create-employee\\create-employee.component.ts","Z:\\emp-crud\\emp-crud\\Emp-Mng-sys-using-STS-Angular\\Fronted\\Employee-Mangement\\src\\app\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\n\nexport class CreateEmployeeComponent implements OnInit{\n\n  employee: Employee = new Employee()\n\n  constructor(private employeeService: EmployeeService, \n  private router: Router){ }\n\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  //It send the employee data to employee service method(which is createEmployee)\n  saveEmployee(){\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n       console.log(data);\n       this.goToEmployeeList();\n    },\n    error => console.log(error));\n  }\n\n  //It will transfer to the /employees path\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n\n  onSubmit(){\n    console.log(this.employee);\n    this.saveEmployee();\n    \n  }\n    \n}\n","<div class=\"col-md-6 offset-md-3 mt-4\">\n<h4>Create Employee</h4>\n<form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label>First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n        <label>Email Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"emailId\" [(ngModel)]=\"employee.emailId\" name=\"emailId\">\n    </div>\n\n   \n\n\n    <button class=\"btn btn-success\" type=\"submit\">Submit</button>\n\n</form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}