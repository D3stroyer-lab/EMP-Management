{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EmployeeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/employees\";\n  }\n  getEmployeesList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createEmployee(employee) {\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n  getEmployeeById(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});\nexport { EmployeeService };","map":{"version":3,"names":["EmployeeService","constructor","httpClient","baseURL","getEmployeesList","get","createEmployee","employee","post","getEmployeeById","id","updateEmployee","put","deleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["Z:\\emp-crud\\emp-crud\\Employee-Management-System-using-Spring-Boot-and-Angular-main\\Fronted\\Employee-Mangement\\src\\app\\employee.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private baseURL = \"http://localhost:8080/api/v1/employees\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getEmployeesList(): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`,employee);\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,eAAe;EAG1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,wCAAwC;EAEZ;EAE9CC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAa,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC3D;EAEAG,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAACI,QAAQ,CAAC;EACzD;EAEAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC/D;EAEAC,cAAcA,CAACD,EAAU,EAAEH,QAAkB;IAC3C,OAAO,IAAI,CAACL,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIO,EAAE,EAAE,EAAEH,QAAQ,CAAC;EAC/D;EAEAM,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIO,EAAE,EAAE,CAAC;EACxD;;AAvBWV,eAAe,C;mBAAfA,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAflB,eAAe,C;SAAfA,eAAe;EAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPrB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}